# Enhanced tmux configuration for public dotfiles

# Terminal settings
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Change prefix to Ctrl-a (more ergonomic than Ctrl-b)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Enable mouse support
set -g mouse on

# Split panes using | and - (more intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Quick pane splitting with current path
bind '\' split-window -h -c "#{pane_current_path}"
bind '_' split-window -v -c "#{pane_current_path}"

# Reload config file
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Fast pane switching with Alt+Arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Vim-style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Set easier window split keys
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Easy resizing of panes with prefix+arrow keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Fine adjustment (1 cell)
bind -r C-h resize-pane -L 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-l resize-pane -R 1

# Window navigation
bind -r C-h previous-window
bind -r C-l next-window
bind Tab last-window

# Quick window selection
bind -r C-p previous-window
bind -r C-n next-window

# Move windows
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Don't rename windows automatically
set-option -g allow-rename off

# Quiet mode
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# Pane borders
set -g pane-border-style 'fg=colour240'
set -g pane-active-border-style 'fg=colour33'

# Status bar
set -g status on
set -g status-position bottom
set -g status-interval 5
set -g status-justify left

# Status bar colors and style
set -g status-style 'bg=colour235 fg=colour137'
set -g status-left-length 50
set -g status-right-length 50

# Status left: session name
set -g status-left '#[fg=colour232,bg=colour39,bold] #S #[fg=colour39,bg=colour235,nobold]'

# Status right: date and time
set -g status-right '#[fg=colour241,bg=colour235]#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour245,bg=colour241]#[fg=colour232,bg=colour245,bold] %H:%M:%S '

# Window status
setw -g window-status-current-style 'fg=colour232 bg=colour39 bold'
setw -g window-status-current-format ' #I:#W#F '

setw -g window-status-style 'fg=colour244 bg=colour235'
setw -g window-status-format ' #I:#W#F '

# Messages
set -g message-style 'fg=colour232 bg=colour166 bold'
set -g message-command-style 'fg=colour232 bg=colour166 bold'

# History
set -g history-limit 50000

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# Vi mode for copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Copy to system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Paste from system clipboard
bind P paste-buffer

# Enter copy mode with Escape
bind Escape copy-mode

# Quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Synchronize panes toggle
bind C-s set-window-option synchronize-panes

# Toggle status bar
bind-key b set-option status

# Create new window with current path
bind c new-window -c "#{pane_current_path}"

# Break pane into window
bind-key ! break-pane -d

# Join pane from window
bind-key @ command-prompt -p "join pane from:"  "join-pane -s ':%%'"

# Display panes
set -g display-panes-time 2000

# Faster command sequences
set -s escape-time 0

# Focus events enabled for terminals that support them
set -g focus-events on

# Aggressive resize
setw -g aggressive-resize on

# Clock mode
setw -g clock-mode-colour colour39
setw -g clock-mode-style 24

# Pane navigation with awareness of Vim splits
# (requires vim-tmux-navigator plugin in Vim)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Clear screen with prefix + C-l (since C-l is used for navigation)
bind C-l send-keys 'C-l'

# Restore automatic renaming when creating new window
bind-key c new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"

# List of plugins (using tpm if available)
# To install: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# Then press prefix + I to install plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Plugin settings
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom)
# Only run if tpm is installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'

# Source private tmux config if it exists
if-shell "test -f ~/.dotfiles-private/.tmux.conf" "source ~/.dotfiles-private/.tmux.conf"

# Local customizations
if-shell "test -f ~/.tmux.conf.local" "source ~/.tmux.conf.local"